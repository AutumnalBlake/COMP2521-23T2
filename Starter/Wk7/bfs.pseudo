function BFS(G, source):
    Q = empty queue
    visited = empty set

    enqueue source into Q
    add source to visited

    while Q is not empty:
        v = dequeue from Q

        visit v

        for each vertex w adjacent to v:
            if w is not in visited: 
                enqueue w into Q
                add w to visited
            
        
    
function DFS(G, source):
    S = empty stack
    visited = empty set

    push source onto S
    add source to visited

    while S is not empty 
        v = pop from S

        if v is in visited:
            continue

        visit v
        add v to visited

        for each vertex w adjacent to v:
            push w onto S
        
    